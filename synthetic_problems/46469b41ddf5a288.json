{
  "uid": "46469b41ddf5a288",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6
        ],
        [
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6
        ],
        [
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          0
        ],
        [
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          5
        ]
      ],
      "output": [
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6
        ]
      ]
    },
    {
      "input": [
        [
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          8
        ]
      ],
      "output": [
        [
          8,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1
        ],
        [
          8,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          7,
          0,
          7,
          7,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          9,
          0,
          0,
          0,
          0,
          7,
          7,
          0,
          7
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          5,
          0,
          0,
          0,
          0,
          6,
          0,
          0
        ],
        [
          5,
          5,
          0,
          0,
          0,
          6,
          0,
          6
        ],
        [
          5,
          5,
          5,
          0,
          0,
          0,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          0,
          0,
          5,
          5,
          5
        ],
        [
          6,
          0,
          6,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          5
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, positioning, copying, rotation, size\n\n# description:\n# In the input, you will see four square patterns of pixels in the corners of the grid. Each pattern is made of a single color, but different patterns may have different colors. The patterns may have different sizes.\n# To make the output, copy each pattern to the corner diagonally opposite to its original position, rotating it 180 degrees. The output grid should be the same size as the input grid.\n\ndef main(input_grid):\n    # get the patterns from the input\n    objects = find_connected_components(input_grid, connectivity=8)\n\n    # create the output grid with the same size as the input\n    output_grid = np.full_like(input_grid, Color.BLACK)\n\n    # copy and rotate each pattern\n    for obj in objects:\n        # crop the pattern to remove any extra rows or columns of black pixels\n        sprite = crop(obj)\n        \n        # get the bounding box of the original pattern\n        x, y, w, h = bounding_box(obj)\n        \n        # determine the new position (diagonally opposite)\n        new_x = input_grid.shape[0] - x - w if x < input_grid.shape[0] // 2 else 0\n        new_y = input_grid.shape[1] - y - h if y < input_grid.shape[1] // 2 else 0\n        \n        # rotate the sprite 180 degrees\n        rotated_sprite = np.rot90(sprite, k=2)\n        \n        # copy the rotated pattern to the output grid\n        blit_sprite(output_grid, rotated_sprite, x=new_x, y=new_y, background=Color.BLACK)\n    \n    return output_grid\n\ndef generate_input():\n    # make a random sized grid with black background\n    n = np.random.randint(8, 12)\n    m = np.random.randint(8, 12)\n    grid = np.zeros((n, m), dtype=int)\n\n    # function to generate a random pattern\n    def random_pattern(size):\n        color = np.random.choice(list(Color.NOT_BLACK))\n        return np.random.choice([color, Color.BLACK], size=(size, size))\n\n    # generate patterns for each corner\n    sizes = [np.random.randint(2, min(n, m) // 2) for _ in range(4)]\n    \n    # top-left corner\n    grid[:sizes[0], :sizes[0]] = random_pattern(sizes[0])\n    \n    # top-right corner\n    grid[:sizes[1], -sizes[1]:] = random_pattern(sizes[1])\n    \n    # bottom-left corner\n    grid[-sizes[2]:, :sizes[2]] = random_pattern(sizes[2])\n    \n    # bottom-right corner\n    grid[-sizes[3]:, -sizes[3]:] = random_pattern(sizes[3])\n\n    # Check that at least one of the patterns is not all black\n    # If they are all black, try again\n    if np.all(grid == Color.BLACK):\n        return generate_input()\n\n    return grid"
}