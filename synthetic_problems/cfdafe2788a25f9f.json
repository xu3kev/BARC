{
  "uid": "cfdafe2788a25f9f",
  "annotations": {
    "example": "ok",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          0,
          9,
          0,
          4,
          2,
          0,
          0
        ],
        [
          0,
          9,
          9,
          0,
          4,
          4,
          9,
          0
        ],
        [
          2,
          4,
          3,
          0,
          3,
          3,
          9,
          9
        ],
        [
          4,
          4,
          3,
          8,
          8,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          3,
          4,
          4
        ],
        [
          9,
          9,
          3,
          3,
          0,
          3,
          4,
          2
        ],
        [
          0,
          9,
          4,
          4,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          2,
          4,
          0,
          9,
          0,
          0
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ]
      ],
      "output": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          8,
          9,
          8,
          4,
          2,
          8,
          8
        ],
        [
          8,
          9,
          9,
          8,
          4,
          4,
          9,
          8
        ],
        [
          2,
          4,
          3,
          8,
          3,
          3,
          9,
          9
        ],
        [
          4,
          4,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          4,
          4
        ],
        [
          9,
          9,
          3,
          3,
          8,
          3,
          4,
          2
        ],
        [
          8,
          9,
          4,
          4,
          8,
          9,
          9,
          8
        ],
        [
          8,
          8,
          2,
          4,
          8,
          9,
          8,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          8,
          2,
          4,
          8,
          9,
          8,
          8
        ],
        [
          8,
          9,
          4,
          4,
          8,
          9,
          9,
          8
        ],
        [
          9,
          9,
          3,
          3,
          8,
          3,
          4,
          2
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          4,
          4
        ],
        [
          4,
          4,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          2,
          4,
          3,
          8,
          3,
          3,
          9,
          9
        ],
        [
          8,
          9,
          9,
          8,
          4,
          4,
          9,
          8
        ],
        [
          8,
          8,
          9,
          8,
          4,
          2,
          8,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          8,
          9,
          8,
          4,
          2,
          8,
          8
        ],
        [
          8,
          9,
          9,
          8,
          4,
          4,
          9,
          8
        ],
        [
          2,
          4,
          3,
          8,
          3,
          3,
          9,
          9
        ],
        [
          4,
          4,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          4,
          4
        ],
        [
          9,
          9,
          3,
          3,
          8,
          3,
          4,
          2
        ],
        [
          8,
          9,
          4,
          4,
          8,
          9,
          9,
          8
        ],
        [
          8,
          8,
          2,
          4,
          8,
          9,
          8,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          8,
          2,
          4,
          8,
          9,
          8,
          8
        ],
        [
          8,
          9,
          4,
          4,
          8,
          9,
          9,
          8
        ],
        [
          9,
          9,
          3,
          3,
          8,
          3,
          4,
          2
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          4,
          4
        ],
        [
          4,
          4,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          2,
          4,
          3,
          8,
          3,
          3,
          9,
          9
        ],
        [
          8,
          9,
          9,
          8,
          4,
          4,
          9,
          8
        ],
        [
          8,
          8,
          9,
          8,
          4,
          2,
          8,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ]
      ]
    },
    {
      "input": [
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          7,
          0,
          0,
          0,
          7,
          7
        ],
        [
          7,
          7,
          7,
          0,
          7,
          7,
          7
        ],
        [
          7,
          6,
          6,
          0,
          6,
          6,
          7
        ],
        [
          5,
          4,
          7,
          0,
          7,
          4,
          5
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          3,
          7,
          7,
          7,
          7,
          7,
          3
        ],
        [
          0,
          7,
          7,
          0,
          7,
          7,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "output": [
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          7,
          8,
          8,
          8,
          7,
          7
        ],
        [
          7,
          7,
          7,
          8,
          7,
          7,
          7
        ],
        [
          7,
          6,
          6,
          8,
          6,
          6,
          7
        ],
        [
          5,
          4,
          7,
          8,
          7,
          4,
          5
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          3,
          7,
          7,
          7,
          7,
          7,
          3
        ],
        [
          8,
          7,
          7,
          8,
          7,
          7,
          8
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          7,
          8,
          8,
          8,
          7,
          7
        ],
        [
          7,
          7,
          7,
          8,
          7,
          7,
          7
        ],
        [
          7,
          6,
          6,
          8,
          6,
          6,
          7
        ],
        [
          5,
          4,
          7,
          8,
          7,
          4,
          5
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          3,
          7,
          7,
          7,
          7,
          7,
          3
        ],
        [
          8,
          7,
          7,
          8,
          7,
          7,
          8
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          7,
          8,
          8,
          8,
          7,
          7
        ],
        [
          7,
          7,
          7,
          8,
          7,
          7,
          7
        ],
        [
          7,
          6,
          6,
          8,
          6,
          6,
          7
        ],
        [
          5,
          4,
          7,
          8,
          7,
          4,
          5
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          3,
          7,
          7,
          7,
          7,
          7,
          3
        ],
        [
          8,
          7,
          7,
          8,
          7,
          7,
          8
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          7,
          8,
          8,
          8,
          7,
          7
        ],
        [
          7,
          7,
          7,
          8,
          7,
          7,
          7
        ],
        [
          7,
          6,
          6,
          8,
          6,
          6,
          7
        ],
        [
          5,
          4,
          7,
          8,
          7,
          4,
          5
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          3,
          7,
          7,
          7,
          7,
          7,
          3
        ],
        [
          8,
          7,
          7,
          8,
          7,
          7,
          8
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ]
    },
    {
      "input": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          7,
          7,
          8,
          9,
          7,
          9,
          8,
          7,
          7
        ],
        [
          7,
          7,
          9,
          9,
          8,
          9,
          9,
          7,
          7
        ],
        [
          1,
          6,
          6,
          9,
          8,
          9,
          6,
          6,
          1
        ],
        [
          1,
          9,
          2,
          2,
          2,
          2,
          2,
          9,
          1
        ],
        [
          5,
          5,
          2,
          1,
          5,
          1,
          2,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          4,
          5,
          0,
          5,
          4,
          5,
          8
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ],
      "output": [
        [
          7,
          7,
          8,
          9,
          7,
          9,
          8,
          7,
          7
        ],
        [
          7,
          7,
          9,
          9,
          8,
          9,
          9,
          7,
          7
        ],
        [
          1,
          6,
          6,
          9,
          8,
          9,
          6,
          6,
          1
        ],
        [
          1,
          9,
          2,
          2,
          2,
          2,
          2,
          9,
          1
        ],
        [
          5,
          5,
          2,
          1,
          5,
          1,
          2,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          4,
          5,
          8,
          5,
          4,
          5,
          8
        ],
        [
          7,
          7,
          8,
          9,
          7,
          9,
          8,
          7,
          7
        ],
        [
          7,
          7,
          9,
          9,
          8,
          9,
          9,
          7,
          7
        ],
        [
          1,
          6,
          6,
          9,
          8,
          9,
          6,
          6,
          1
        ],
        [
          1,
          9,
          2,
          2,
          2,
          2,
          2,
          9,
          1
        ],
        [
          5,
          5,
          2,
          1,
          5,
          1,
          2,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          4,
          5,
          8,
          5,
          4,
          5,
          8
        ],
        [
          7,
          7,
          8,
          9,
          7,
          9,
          8,
          7,
          7
        ],
        [
          7,
          7,
          9,
          9,
          8,
          9,
          9,
          7,
          7
        ],
        [
          1,
          6,
          6,
          9,
          8,
          9,
          6,
          6,
          1
        ],
        [
          1,
          9,
          2,
          2,
          2,
          2,
          2,
          9,
          1
        ],
        [
          5,
          5,
          2,
          1,
          5,
          1,
          2,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          4,
          5,
          8,
          5,
          4,
          5,
          8
        ],
        [
          7,
          7,
          8,
          9,
          7,
          9,
          8,
          7,
          7
        ],
        [
          7,
          7,
          9,
          9,
          8,
          9,
          9,
          7,
          7
        ],
        [
          1,
          6,
          6,
          9,
          8,
          9,
          6,
          6,
          1
        ],
        [
          1,
          9,
          2,
          2,
          2,
          2,
          2,
          9,
          1
        ],
        [
          5,
          5,
          2,
          1,
          5,
          1,
          2,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          4,
          5,
          8,
          5,
          4,
          5,
          8
        ]
      ]
    },
    {
      "input": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          9,
          8,
          1,
          0,
          0,
          5,
          8,
          8
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          7,
          7,
          2,
          6,
          8,
          8,
          3,
          1,
          0
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          6,
          9,
          8,
          1,
          0,
          0,
          5,
          8,
          8
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ]
      ],
      "output": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          9,
          8,
          1,
          8,
          8,
          5,
          8,
          8
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          7,
          7,
          2,
          6,
          8,
          8,
          3,
          1,
          8
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          6,
          9,
          8,
          1,
          8,
          8,
          5,
          8,
          8
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          1,
          1,
          3,
          1,
          4,
          4,
          4,
          9
        ],
        [
          8,
          8,
          5,
          8,
          8,
          1,
          8,
          9,
          6
        ],
        [
          2,
          8,
          6,
          6,
          7,
          3,
          7,
          6,
          2
        ],
        [
          4,
          3,
          3,
          6,
          6,
          3,
          6,
          7,
          2
        ],
        [
          8,
          1,
          3,
          8,
          8,
          6,
          2,
          7,
          7
        ],
        [
          4,
          3,
          3,
          6,
          6,
          3,
          6,
          7,
          2
        ],
        [
          2,
          8,
          6,
          6,
          7,
          3,
          7,
          6,
          2
        ],
        [
          8,
          8,
          5,
          8,
          8,
          1,
          8,
          9,
          6
        ],
        [
          8,
          1,
          1,
          3,
          1,
          4,
          4,
          4,
          9
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          9,
          8,
          1,
          8,
          8,
          5,
          8,
          8
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          7,
          7,
          2,
          6,
          8,
          8,
          3,
          1,
          8
        ],
        [
          2,
          7,
          6,
          3,
          6,
          6,
          3,
          3,
          4
        ],
        [
          2,
          6,
          7,
          3,
          7,
          6,
          6,
          8,
          2
        ],
        [
          6,
          9,
          8,
          1,
          8,
          8,
          5,
          8,
          8
        ],
        [
          9,
          4,
          4,
          4,
          1,
          3,
          1,
          1,
          8
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          8,
          1,
          1,
          3,
          1,
          4,
          4,
          4,
          9
        ],
        [
          8,
          8,
          5,
          8,
          8,
          1,
          8,
          9,
          6
        ],
        [
          2,
          8,
          6,
          6,
          7,
          3,
          7,
          6,
          2
        ],
        [
          4,
          3,
          3,
          6,
          6,
          3,
          6,
          7,
          2
        ],
        [
          8,
          1,
          3,
          8,
          8,
          6,
          2,
          7,
          7
        ],
        [
          4,
          3,
          3,
          6,
          6,
          3,
          6,
          7,
          2
        ],
        [
          2,
          8,
          6,
          6,
          7,
          3,
          7,
          6,
          2
        ],
        [
          8,
          8,
          5,
          8,
          8,
          1,
          8,
          9,
          6
        ],
        [
          8,
          1,
          1,
          3,
          1,
          4,
          4,
          4,
          9
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# symmetry, repetition, coloring diagonal pixels\n\n# description:\n# Given an input grid with a pattern encapsulated by horizontal symmetrical borders, create an output grid by first mirroring the pattern horizontally and then copying it below.\n# Lastly, color all the diagonal adjacent black pixels teal.\n\ndef main(input_grid):\n    # Find the pattern by removing top and bottom symmetric borders\n    t, b = detect_border_indices(input_grid)\n    pattern = input_grid[t+1:b, :]\n    \n    # Mirror the pattern horizontally\n    mirrored_pattern = np.flip(pattern, axis=1)\n\n    # Combine the original and mirrored pattern\n    combined_pattern = np.concatenate((pattern, mirrored_pattern), axis=0)\n    \n    # Replicate the combined pattern below the original\n    output_grid = np.concatenate((combined_pattern, combined_pattern), axis=0)\n    \n    # Color diagonal pixels\n    diagonal_dx_dy = [(1, 1), (-1, 1), (1, -1), (-1, -1)]\n    for y in range(output_grid.shape[1]):\n        for x in range(output_grid.shape[0]):\n            if output_grid[x, y] != Color.BLACK and output_grid[x, y] != Color.TEAL:\n                for dx, dy in diagonal_dx_dy:\n                    if 0 <= x + dx < output_grid.shape[0] and 0 <= y + dy < output_grid.shape[1] and output_grid[x + dx, y + dy] == Color.BLACK:\n                        output_grid[x + dx, y + dy] = Color.TEAL\n                        \n    return output_grid\n\n\ndef generate_input():\n    # Choose random size for pattern and vertical padding\n    n, m = np.random.randint(5, 10), np.random.randint(5, 10)\n    padding = np.random.randint(1, 3)\n    \n    # Create the basic empty pattern grid\n    pattern = random_sprite(n, m, density=0.5, color_palette=list(Color.NOT_BLACK), connectivity=4)\n    \n    # Add horizontal symmetric borders\n    symmetric_border = np.random.choice(Color.NOT_BLACK)\n    grid = np.pad(pattern, ((padding, padding), (0, 0)), mode='constant', constant_values=Color.BLACK)\n    \n    # Set symmetric borders color\n    grid[:padding, :] = symmetric_border\n    grid[-padding:, :] = symmetric_border\n    \n    return grid\n\n\ndef detect_border_indices(input_grid, background=Color.BLACK):\n    # Detect the indices of the top and bottom symmetric borders\n    symmetric_border_color = None\n    t, b = 0, input_grid.shape[0] - 1\n\n    for i in range(input_grid.shape[0]):\n        if np.all(input_grid[i] != background):\n            symmetric_border_color = input_grid[i][0]\n            t = i\n            break\n    \n    for i in range(input_grid.shape[0] - 1, -1, -1):\n        if np.all(input_grid[i] == symmetric_border_color):\n            b = i\n            break\n\n    return t, b"
}