{
  "uid": "9631cf4b68cde54b",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          0,
          3,
          7
        ],
        [
          0,
          9,
          8,
          6,
          7,
          0,
          3,
          7
        ],
        [
          0,
          9,
          8,
          6,
          0,
          0,
          3,
          7
        ],
        [
          0,
          9,
          8,
          6,
          0,
          0,
          3,
          7
        ],
        [
          0,
          9,
          8,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ]
      ],
      "output": [
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ],
        [
          6,
          9,
          8,
          6,
          7,
          3,
          3,
          7
        ]
      ]
    },
    {
      "input": [
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          0,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          0,
          0,
          0,
          1
        ],
        [
          1,
          2,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ],
        [
          1,
          2,
          6,
          5,
          7,
          9,
          1
        ]
      ]
    },
    {
      "input": [
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          0,
          2,
          3,
          0,
          7,
          6,
          1,
          8,
          7
        ],
        [
          0,
          2,
          3,
          0,
          7,
          6,
          0,
          8,
          7
        ],
        [
          0,
          2,
          3,
          0,
          7,
          6,
          0,
          8,
          7
        ],
        [
          0,
          0,
          3,
          0,
          7,
          6,
          0,
          8,
          0
        ],
        [
          0,
          0,
          3,
          0,
          7,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ],
        [
          4,
          2,
          3,
          7,
          7,
          6,
          1,
          8,
          7
        ]
      ]
    },
    {
      "input": [
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          0,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          0,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          0,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          0,
          0,
          5,
          1,
          0,
          0,
          0,
          7,
          0
        ],
        [
          0,
          0,
          5,
          1,
          0,
          0,
          0,
          7,
          0
        ],
        [
          0,
          0,
          5,
          1,
          0,
          0,
          0,
          7,
          0
        ]
      ],
      "output": [
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ],
        [
          5,
          6,
          5,
          1,
          5,
          5,
          9,
          7,
          6
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, vertical bars, colors as indicators\n\n# description:\n# In the input, you will see a grid with multiple vertical segments of varying height.\n# Each vertical segment contains colored pixels with black background elsewhere.\n# To construct the output, for each vertical segment, fill the remaining height till the bottom with the \n# color of the pixel at the bottom of each segment.\n\ndef main(input_grid):\n    output_grid = np.copy(input_grid)\n\n    # Iterate through each column of the grid\n    for col in range(input_grid.shape[1]):\n        # Find the bottom-most colored pixel in each vertical segment\n        for row in reversed(range(input_grid.shape[0])):\n            if input_grid[row, col] != Color.BLACK:\n                color = input_grid[row, col]\n                # Fill the remaining height till the bottom with the identified color\n                output_grid[row:, col] = color\n                break\n            \n    return output_grid\n\n\ndef generate_input():\n    # Determine the grid size\n    n = np.random.randint(5, 10)\n    m = np.random.randint(5, 10)\n\n    # Create a black grid\n    grid = np.full((n, m), Color.BLACK)\n\n    num_segments = m\n    max_segment_height = n\n\n    # Generate vertical segments\n    for col in range(num_segments):\n        height = np.random.randint(1, max_segment_height + 1)\n        color = np.random.choice(list(Color.NOT_BLACK))\n\n        # Fill the segment with the chosen color\n        grid[:height, col] = color\n    \n    return grid"
}