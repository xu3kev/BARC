{
  "uid": "1e59db26e7d9ac70",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          2,
          2,
          0,
          2,
          2
        ],
        [
          2,
          2,
          0,
          0,
          0,
          2
        ],
        [
          2,
          2,
          0,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          0,
          0,
          2
        ],
        [
          2,
          0,
          0,
          2,
          2,
          2
        ],
        [
          2,
          0,
          0,
          0,
          2,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          3,
          0,
          3,
          0,
          3
        ],
        [
          0,
          3,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          3,
          0,
          0,
          3,
          3
        ],
        [
          3,
          0,
          3,
          3,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          4,
          4,
          4,
          0,
          4
        ],
        [
          4,
          0,
          0,
          4,
          0,
          4
        ],
        [
          4,
          4,
          0,
          4,
          4,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          4,
          0,
          0,
          4,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4
        ]
      ],
      "output": [
        [
          8,
          8,
          7,
          7,
          8,
          8
        ],
        [
          7,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          7,
          8,
          8
        ],
        [
          7,
          8,
          8,
          7,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          2,
          0,
          2,
          0
        ],
        [
          2,
          0,
          2,
          2,
          0
        ],
        [
          2,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          2,
          0,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          3
        ],
        [
          3,
          3,
          3,
          0,
          3
        ],
        [
          3,
          3,
          0,
          0,
          3
        ],
        [
          3,
          3,
          0,
          3,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          4,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          4,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4
        ]
      ],
      "output": [
        [
          8,
          8,
          8,
          7,
          8
        ],
        [
          8,
          8,
          8,
          7,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8
        ],
        [
          7,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          7
        ]
      ]
    },
    {
      "input": [
        [
          2,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          2,
          0,
          0,
          0,
          2,
          2,
          2
        ],
        [
          2,
          2,
          0,
          2,
          2,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          3,
          3,
          3,
          0,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          0,
          3,
          3,
          0
        ],
        [
          3,
          0,
          3,
          0,
          0,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          4,
          4,
          0,
          4,
          4,
          0
        ],
        [
          4,
          4,
          0,
          0,
          4,
          4,
          0
        ],
        [
          0,
          0,
          4,
          0,
          0,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          0,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          4,
          4
        ]
      ],
      "output": [
        [
          8,
          7,
          7,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          7,
          7,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          7,
          8,
          8,
          8,
          8
        ],
        [
          8,
          7,
          8,
          8,
          8,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          2,
          0,
          2,
          2,
          0
        ],
        [
          0,
          2,
          2,
          0,
          2,
          2,
          2
        ],
        [
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          0,
          2,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          2,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          2,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          3,
          0,
          0,
          0,
          3,
          3
        ],
        [
          3,
          0,
          0,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          3,
          3,
          0,
          0,
          0,
          3
        ],
        [
          3,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          3,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          0,
          3,
          3,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          4,
          4,
          0,
          4,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          0,
          4,
          0,
          4,
          4
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          0,
          0,
          4
        ],
        [
          0,
          4,
          0,
          0,
          0,
          4,
          0
        ]
      ],
      "output": [
        [
          8,
          7,
          8,
          8,
          8,
          8,
          7
        ],
        [
          8,
          8,
          8,
          7,
          8,
          8,
          8
        ],
        [
          8,
          7,
          8,
          7,
          8,
          7,
          8
        ],
        [
          8,
          8,
          7,
          8,
          8,
          8,
          8
        ],
        [
          7,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          7,
          8,
          7,
          8,
          8,
          8
        ],
        [
          8,
          7,
          8,
          8,
          8,
          7,
          8
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# boolean logical operations, bitmasks with separator, color mapping\n\n# description:\n# In the input, you will see three bitmasks separated by two blue vertical bars. \n# The left bitmask is red, the middle one is green, and the right one is yellow.\n# To make the output:\n# 1. Perform a bitwise XOR operation between the left and middle bitmasks\n# 2. Perform a bitwise AND operation between the result of step 1 and the right bitmask\n# 3. In the final output, color the resulting '1' pixels orange, and '0' pixels teal\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the two blue vertical bars\n    bar_positions = []\n    for x in range(input_grid.shape[0]):\n        if np.all(input_grid[x, :] == Color.BLUE):\n            bar_positions.append(x)\n\n    left_mask = input_grid[:bar_positions[0], :]\n    middle_mask = input_grid[bar_positions[0]+1:bar_positions[1], :]\n    right_mask = input_grid[bar_positions[1]+1:, :]\n\n    # Convert color masks to boolean masks\n    left_bool = (left_mask == Color.RED)\n    middle_bool = (middle_mask == Color.GREEN)\n    right_bool = (right_mask == Color.YELLOW)\n\n    # Perform logical operations\n    xor_result = np.logical_xor(left_bool, middle_bool)\n    final_result = np.logical_and(xor_result, right_bool)\n\n    # Create output grid\n    output_grid = np.full_like(left_mask, Color.TEAL)\n    output_grid[final_result] = Color.ORANGE\n    \n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    # Create three equally sized bitmasks\n    width, height = np.random.randint(3, 8), np.random.randint(3, 8)\n\n    grid1 = np.random.choice([Color.RED, Color.BLACK], size=(width, height))\n    grid2 = np.random.choice([Color.GREEN, Color.BLACK], size=(width, height))\n    grid3 = np.random.choice([Color.YELLOW, Color.BLACK], size=(width, height))\n    \n    # Create blue vertical bars\n    bar = np.full((1, height), Color.BLUE)\n\n    # Combine grids and bars\n    grid = np.concatenate((grid1, bar, grid2, bar, grid3), axis=0)\n\n    return grid"
}