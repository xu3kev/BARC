{
  "uid": "4a81cdc34cbd95e1",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          4,
          8,
          7,
          6,
          4,
          6,
          9,
          8,
          5,
          6
        ],
        [
          7,
          9,
          3,
          3,
          7,
          7,
          9,
          7,
          5,
          7
        ],
        [
          1,
          6,
          5,
          8,
          7,
          4,
          8,
          2,
          7,
          7
        ],
        [
          3,
          7,
          1,
          8,
          3,
          3,
          3,
          8,
          4,
          5
        ],
        [
          9,
          8,
          9,
          7,
          4,
          4,
          3,
          7,
          8,
          5
        ],
        [
          6,
          6,
          8,
          5,
          9,
          1,
          8,
          8,
          4,
          4
        ],
        [
          5,
          4,
          6,
          1,
          3,
          8,
          9,
          8,
          1,
          4
        ],
        [
          2,
          5,
          6,
          7,
          2,
          9,
          2,
          9,
          2,
          8
        ],
        [
          8,
          7,
          6,
          2,
          7,
          9,
          1,
          9,
          5,
          6
        ],
        [
          1,
          1,
          4,
          8,
          1,
          1,
          7,
          8,
          2,
          8
        ]
      ],
      "output": [
        [
          4,
          6,
          6,
          6,
          4,
          6,
          9,
          8,
          5,
          6
        ],
        [
          6,
          6,
          4,
          6,
          6,
          6,
          6,
          7,
          5,
          7
        ],
        [
          6,
          6,
          6,
          6,
          6,
          4,
          6,
          6,
          6,
          6
        ],
        [
          4,
          6,
          5,
          6,
          6,
          6,
          6,
          6,
          4,
          6
        ],
        [
          6,
          6,
          9,
          6,
          4,
          6,
          4,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          4,
          6
        ],
        [
          6,
          4,
          6,
          6,
          4,
          6,
          9,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          2,
          9,
          2,
          8
        ],
        [
          8,
          6,
          6,
          6,
          7,
          9,
          5,
          9,
          5,
          6
        ],
        [
          5,
          6,
          4,
          6,
          5,
          5,
          7,
          8,
          2,
          8
        ]
      ]
    },
    {
      "input": [
        [
          6,
          7,
          4,
          1,
          2,
          3,
          6
        ],
        [
          1,
          5,
          2,
          7,
          9,
          1,
          8
        ],
        [
          9,
          5,
          9,
          9,
          8,
          8,
          9
        ],
        [
          6,
          7,
          1,
          7,
          9,
          6,
          3
        ],
        [
          3,
          4,
          4,
          7,
          4,
          1,
          8
        ],
        [
          8,
          6,
          7,
          1,
          3,
          2,
          6
        ],
        [
          1,
          8,
          2,
          8,
          5,
          6,
          5
        ]
      ],
      "output": [
        [
          6,
          6,
          4,
          6,
          6,
          4,
          6
        ],
        [
          5,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          9,
          5,
          9,
          9,
          8,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          4
        ],
        [
          4,
          6,
          4,
          6,
          4,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          5,
          8,
          2,
          8,
          5,
          6,
          5
        ]
      ]
    },
    {
      "input": [
        [
          7,
          5,
          9,
          4,
          4,
          2,
          3
        ],
        [
          1,
          7,
          8,
          6,
          7,
          5,
          6
        ],
        [
          1,
          8,
          4,
          7,
          3,
          8,
          1
        ],
        [
          1,
          9,
          3,
          7,
          5,
          2,
          4
        ],
        [
          6,
          8,
          7,
          5,
          6,
          8,
          9
        ],
        [
          4,
          9,
          6,
          1,
          5,
          3,
          5
        ],
        [
          1,
          1,
          8,
          7,
          8,
          2,
          9
        ]
      ],
      "output": [
        [
          7,
          5,
          6,
          4,
          6,
          6,
          4
        ],
        [
          5,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          5,
          6,
          4,
          6,
          4,
          6,
          6
        ],
        [
          5,
          6,
          6,
          6,
          6,
          6,
          4
        ],
        [
          6,
          6,
          7,
          5,
          6,
          6,
          6
        ],
        [
          4,
          6,
          6,
          5,
          6,
          4,
          6
        ],
        [
          6,
          6,
          8,
          7,
          6,
          6,
          6
        ]
      ]
    },
    {
      "input": [
        [
          5,
          6,
          5,
          3,
          6,
          9,
          5,
          9,
          1
        ],
        [
          6,
          5,
          6,
          5,
          6,
          9,
          9,
          7,
          6
        ],
        [
          6,
          6,
          8,
          9,
          4,
          1,
          7,
          7,
          6
        ],
        [
          5,
          1,
          2,
          6,
          9,
          2,
          8,
          7,
          1
        ],
        [
          7,
          4,
          8,
          3,
          5,
          7,
          2,
          6,
          3
        ],
        [
          3,
          9,
          7,
          8,
          8,
          4,
          1,
          3,
          2
        ],
        [
          8,
          8,
          9,
          7,
          9,
          4,
          1,
          6,
          1
        ],
        [
          4,
          5,
          5,
          2,
          8,
          1,
          2,
          4,
          7
        ],
        [
          1,
          5,
          8,
          7,
          3,
          8,
          3,
          6,
          2
        ]
      ],
      "output": [
        [
          5,
          6,
          6,
          4,
          6,
          9,
          5,
          9,
          5
        ],
        [
          6,
          5,
          6,
          6,
          6,
          6,
          9,
          7,
          6
        ],
        [
          6,
          6,
          8,
          6,
          4,
          6,
          7,
          7,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          8,
          6,
          6
        ],
        [
          6,
          4,
          6,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          6,
          6,
          6,
          6,
          6,
          4,
          6,
          6,
          6
        ],
        [
          6,
          6,
          9,
          7,
          6,
          6,
          6,
          6,
          6
        ],
        [
          4,
          6,
          5,
          6,
          6,
          6,
          6,
          4,
          6
        ],
        [
          6,
          6,
          8,
          6,
          4,
          6,
          6,
          6,
          6
        ]
      ]
    }
  ],
  "code": "from common import *\nimport numpy as np\n\n# concepts:\n# color mapping, surrounding\n\n# description:\n# Step 1: Change GREEN pixels to YELLOW and BLUE pixels to GREY\n# Step 2: Surround every YELLOW pixel with PINK pixels\n\ncolor_map = {\n    Color.GREEN: Color.YELLOW,\n    Color.BLUE: Color.GREY\n}\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Step 1: Perform color mapping\n    output_grid = input_grid.copy()\n    for original_color, new_color in color_map.items():\n        output_grid[input_grid == original_color] = new_color\n    \n    # Step 2: Surround every YELLOW pixel with PINK pixels\n    for i in range(len(output_grid)):\n        for j in range(len(output_grid[i])):\n            if output_grid[i, j] == Color.YELLOW:\n                for di in range(-1, 2):\n                    for dj in range(-1, 2):\n                        if (di != 0 or dj != 0) and 0 <= i + di < output_grid.shape[0] and 0 <= j + dj < output_grid.shape[1]:\n                            output_grid[i + di, j + dj] = Color.PINK\n\n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    # Create a random grid size between 5x5 and 10x10\n    n = np.random.randint(5, 11)\n    input_grid = np.random.choice(list(Color.NOT_BLACK), size=(n, n))\n    return input_grid\n\n# Example usage (for testing purposes):"
}