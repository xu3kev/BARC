{
  "uid": "4c2c17b74e8dc156",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          7,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          6,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          6,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n\n# concepts:\n# patterns, reflection, copying, translational symmetry\n\n# description:\n# In the input, you will see two mirrored patterns in the left and right halves of the grid.\n# The grid will have a vertical axis of symmetry.\n# To make the output, extract the left pattern of the input and repeat it horizontally to fill the entire output grid.\n\ndef main(input_grid):\n    # Find the vertical axis of symmetry (middle of the grid)\n    vertical_axis = input_grid.shape[1] // 2\n\n    # Extract the left pattern\n    left_pattern = input_grid[:, :vertical_axis]\n\n    # Initialize the output grid with the same height as the input and double the width of the left pattern\n    output_grid = np.zeros((input_grid.shape[0], 2 * vertical_axis), dtype=int)\n\n    # Repeat the left pattern to fill the entire width of the output grid\n    for i in range(2):\n        blit_sprite(output_grid, left_pattern, y=0, x=i * vertical_axis)\n\n    return output_grid\n\ndef generate_input():\n    # Make a random sized grid with even width and odd height for symmetry purposes\n    n = np.random.randint(4, 8)\n    m = np.random.randint(3, 6) * 2  # Even width\n\n    # Initialize the grid\n    grid = np.zeros((n, m), dtype=int)\n\n    # Select a color for the pattern\n    color = np.random.choice(list(Color.NOT_BLACK))\n\n    # Create a random pattern on the left half of the grid\n    left_pattern = np.zeros((n, m // 2), dtype=int)\n    for _ in range(np.random.randint(1, n * (m // 2) // 2 + 1)):\n        x, y = np.random.randint(n), np.random.randint(m // 2)\n        left_pattern[x, y] = color\n\n    # Blit the left pattern onto the grid\n    blit_sprite(grid, left_pattern, y=0, x=0)\n\n    # Reflect the left pattern to the right half of the grid\n    right_pattern = np.fliplr(left_pattern)\n    blit_sprite(grid, right_pattern, y=0, x=m // 2)\n\n    return grid"
}