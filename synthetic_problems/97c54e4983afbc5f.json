{
  "uid": "97c54e4983afbc5f",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          7,
          7,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          0,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          9,
          0,
          0
        ],
        [
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          4,
          9,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          9,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          7,
          7,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          7,
          7,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          9,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          9,
          9,
          0
        ],
        [
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          0,
          4,
          9,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          9,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          1,
          9,
          9,
          0,
          0,
          9,
          9,
          1,
          9,
          9
        ],
        [
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          4,
          1,
          0,
          0,
          0,
          0,
          1,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          1,
          9,
          9,
          0,
          0,
          9,
          9,
          1,
          9,
          9
        ],
        [
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          4,
          1,
          0,
          0,
          0,
          0,
          1,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          0,
          0,
          9,
          0
        ],
        [
          0,
          9,
          9,
          9,
          3,
          3,
          0,
          0,
          0,
          3,
          9,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          9,
          3,
          3,
          0,
          0,
          0,
          3,
          9,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          0,
          3,
          3,
          0,
          0,
          3,
          3,
          0,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          0,
          3,
          3,
          0,
          0,
          3,
          3,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          3,
          0,
          9,
          9
        ],
        [
          0,
          9,
          9,
          9,
          3,
          3,
          0,
          0,
          0,
          3,
          9,
          9,
          9,
          9
        ],
        [
          0,
          9,
          9,
          9,
          3,
          3,
          0,
          0,
          0,
          3,
          9,
          9,
          9,
          9
        ],
        [
          0,
          9,
          9,
          0,
          3,
          3,
          0,
          0,
          3,
          3,
          3,
          9,
          9,
          9
        ],
        [
          0,
          9,
          9,
          0,
          3,
          3,
          0,
          0,
          3,
          3,
          3,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          0,
          6,
          0
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          0,
          6,
          0
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          0,
          6,
          0
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          0,
          6,
          0
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          9,
          6,
          6
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          9,
          6,
          6
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          9,
          6,
          6
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          9,
          6,
          6
        ],
        [
          0,
          6,
          6,
          9,
          0,
          0,
          9,
          6,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, colors, symmetry detection\n\n# description:\n# In the input, you will see a grid containing various shapes of different colors. \n# To make the output, detect the reflected symmetrical counterparts of all shapes along the vertical axis of the grid. \n# If a mirrored symmetrical shape is missing, fill in those pixels with the same color to complete the symmetry.\n\ndef main(input_grid):\n    output_grid = np.copy(input_grid)\n\n    # Find the center vertical axis of reflection\n    center_axis = input_grid.shape[1] // 2\n\n    # Iterate through the grid to check for symmetrical counterparts\n    for x in range(input_grid.shape[0]):\n        for y in range(center_axis + 1):\n            color = input_grid[x, y]\n            if color != Color.BLACK:\n                mirrored_y = 2 * center_axis - y\n                if mirrored_y < input_grid.shape[1] and input_grid[x, mirrored_y] == Color.BLACK:\n                    output_grid[x, mirrored_y] = color\n\n    return output_grid\n\n\ndef generate_input():\n    # dimensions of the grid\n    n = np.random.randint(6, 10)\n    m = 2 * np.random.randint(5, 8)\n    \n    # create a black grid\n    grid = np.full((n, m), Color.BLACK, dtype=int)\n    \n    # add symmetric shapes with colors\n    num_shapes = np.random.randint(2, 5)\n    for _ in range(num_shapes):\n        color = np.random.choice(list(Color.NOT_BLACK))\n        shape_width = np.random.randint(2, m // 2)\n        shape_height = np.random.randint(2, n)\n        \n        # Create a random shape\n        shape = random_sprite(shape_height, shape_width, color_palette=[color], background=Color.BLACK)\n        \n        # Randomly place the left half of the shape\n        x = np.random.randint(0, n - shape_height)\n        y = np.random.randint(0, m // 2 - shape_width)\n        \n        # Place the shape and its symmetric counterpart\n        blit_sprite(grid, shape, x, y)\n        mirrored_shape = np.fliplr(shape)\n        blit_sprite(grid, mirrored_shape, x, 2 * (m // 2) - y - shape_width)\n        \n        # Randomly remove part of the mirrored shape for the puzzle challenge\n        remove_height = np.random.randint(0, shape_height)\n        remove_width = np.random.randint(0, shape_width)\n        grid[x:x+remove_height, 2 * (m // 2) - y - shape_width: 2 * (m // 2) - y - shape_width + remove_width] = Color.BLACK\n\n    return grid"
}