{
  "uid": "a08a1f2135fe5aae",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          1,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          9,
          0,
          0,
          4,
          4,
          4,
          0,
          0
        ],
        [
          9,
          1,
          9,
          0,
          0,
          4,
          4,
          1,
          0,
          0
        ],
        [
          9,
          9,
          9,
          0,
          0,
          4,
          4,
          4,
          0,
          0
        ],
        [
          9,
          9,
          9,
          0,
          0,
          4,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          9
        ],
        [
          4,
          4,
          1,
          9
        ],
        [
          4,
          4,
          4,
          9
        ],
        [
          4,
          4,
          4,
          9
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          0
        ],
        [
          9,
          1,
          0,
          0,
          0,
          0,
          2,
          1,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          0
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          2,
          2,
          2,
          0
        ],
        [
          5,
          1,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          0
        ],
        [
          5,
          1,
          5,
          5,
          1
        ],
        [
          5,
          5,
          5,
          5,
          1
        ],
        [
          2,
          2,
          2,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          1,
          6
        ],
        [
          6,
          6,
          6,
          6,
          0,
          0,
          0,
          6,
          6,
          6
        ],
        [
          1,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          6,
          6,
          6,
          6
        ],
        [
          6,
          1,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0
        ],
        [
          6,
          6,
          6,
          0,
          0,
          5,
          1,
          0,
          0,
          0
        ],
        [
          1,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          6,
          0,
          0,
          3,
          3,
          3,
          0,
          0
        ],
        [
          6,
          6,
          6,
          0,
          0,
          3,
          1,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          0,
          0
        ],
        [
          0,
          8,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          5,
          5,
          0,
          0
        ],
        [
          3,
          3,
          3,
          6
        ],
        [
          8,
          1,
          3,
          6
        ],
        [
          8,
          8,
          3,
          6
        ],
        [
          3,
          3,
          3,
          6
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# alignment by color, pixel manipulation, objects\n\n# description:\n# In the input grid, you will see several disjoint objects of random shapes and colors, each containing a single BLUE pixel. \n# To create the output, align all objects so that their BLUE pixels overlap at the center of the grid. The output grid will be cropped to the minimum size \n# that contains all the objects, and all BLUE pixels should align. Make sure the output grid is centered around the aligned BLUE pixels.\n\ndef main(input_grid):\n    # 1. Extract the objects from the input grid\n    objects = find_connected_components(input_grid, background=Color.BLACK, monochromatic=False, connectivity=8)\n\n    # 2. Make a suitably large output grid\n    output_grid = np.full((input_grid.shape[0]*2, input_grid.shape[1]*2), Color.BLACK, dtype=int)\n\n    # 3. Place each object so that the BLUE pixel aligns to the center of the output grid\n    for obj in objects:\n        # Crop the object to create a sprite\n        sprite = crop(obj, background=Color.BLACK)\n        \n        # Identify the coordinates of the BLUE pixel\n        blue_pixel = np.argwhere(sprite == Color.BLUE)[0]\n        sprite_x, sprite_y = blue_pixel\n\n        # Center of the output grid\n        center_x, center_y = output_grid.shape[0] // 2, output_grid.shape[1] // 2\n\n        # Calculate top-left coordinates to place the sprite such the BLUE pixel aligns with our target center\n        x_offset, y_offset = center_x - sprite_x, center_y - sprite_y\n\n        # Blit the sprite onto the output grid at the calculated location\n        blit_sprite(output_grid, sprite, x_offset, y_offset, background=Color.BLACK)\n    \n    # 4. Crop the output grid to remove excessive black space\n    output_grid = crop(output_grid, background=Color.BLACK)\n\n    return output_grid\n\n\ndef generate_input():\n    input_grid_shape = (10, 10)\n    input_grid = np.zeros(input_grid_shape, dtype=int)\n\n    # Create disjoint objects each containing a single BLUE pixel randomly positioned within it\n    num_objects = np.random.randint(2, 5)\n    for _ in range(num_objects):\n        # Random shape dimensions between 2x2 and 4x4\n        shape_dims = (np.random.randint(2, 5), np.random.randint(2, 5))\n        object_color = np.random.choice(list(Color.NOT_BLACK))\n\n        # Create a random object with a single BLUE pixel at a random position\n        obj = np.full(shape_dims, object_color, dtype=int)\n        obj[np.random.randint(shape_dims[0]), np.random.randint(shape_dims[1])] = Color.BLUE\n\n        # Place the object in a random free location within the input grid\n        x, y = random_free_location_for_sprite(input_grid, obj, padding=1)\n        blit_sprite(input_grid, obj, x, y)\n    \n    return input_grid"
}