{
  "uid": "a21b39fb73b87950",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          4,
          4,
          0,
          4,
          4
        ],
        [
          4,
          4,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          0,
          0,
          4
        ],
        [
          4,
          0,
          0,
          4,
          4,
          4
        ],
        [
          4,
          0,
          0,
          0,
          4,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          3,
          0,
          3,
          0,
          3
        ],
        [
          0,
          3,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          3,
          0,
          0,
          3,
          3
        ],
        [
          3,
          0,
          3,
          3,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          6,
          6,
          6,
          0,
          6
        ],
        [
          6,
          0,
          0,
          6,
          0,
          6
        ],
        [
          6,
          6,
          0,
          6,
          6,
          0
        ],
        [
          0,
          0,
          6,
          6,
          0,
          0
        ],
        [
          6,
          0,
          0,
          6,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6
        ]
      ],
      "output": [
        [
          5,
          5,
          8,
          8,
          5,
          5
        ],
        [
          8,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          8,
          5,
          5
        ],
        [
          8,
          5,
          5,
          8,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          0,
          4,
          0,
          4,
          0
        ],
        [
          4,
          0,
          4,
          4,
          0
        ],
        [
          4,
          4,
          0,
          4,
          0
        ],
        [
          0,
          0,
          4,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          3
        ],
        [
          3,
          3,
          3,
          0,
          3
        ],
        [
          3,
          3,
          0,
          0,
          3
        ],
        [
          3,
          3,
          0,
          3,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          6,
          0,
          6,
          6
        ],
        [
          0,
          0,
          0,
          6,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0
        ],
        [
          6,
          0,
          0,
          0,
          0
        ],
        [
          6,
          0,
          0,
          0,
          6
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          8,
          5
        ],
        [
          5,
          5,
          5,
          8,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          8
        ]
      ]
    },
    {
      "input": [
        [
          4,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          4,
          4,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          0,
          4,
          4,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          3,
          3,
          3,
          0,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          0,
          3,
          3,
          0
        ],
        [
          3,
          0,
          3,
          0,
          0,
          3,
          3
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          6,
          6,
          0,
          6,
          6,
          0
        ],
        [
          6,
          6,
          0,
          0,
          6,
          6,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          6,
          6
        ]
      ],
      "output": [
        [
          5,
          8,
          8,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          8,
          8,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          8,
          5,
          5,
          5,
          5
        ],
        [
          5,
          8,
          5,
          5,
          5,
          8,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          4,
          0,
          4,
          4,
          0
        ],
        [
          0,
          4,
          4,
          0,
          4,
          4,
          4
        ],
        [
          0,
          4,
          0,
          0,
          4,
          0,
          4
        ],
        [
          0,
          4,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          0,
          4,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          3,
          0,
          0,
          0,
          3,
          3
        ],
        [
          3,
          0,
          0,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          3,
          3,
          0,
          0,
          0,
          3
        ],
        [
          3,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          3,
          0,
          0,
          0
        ],
        [
          3,
          0,
          3,
          0,
          3,
          3,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          6,
          6,
          0,
          6,
          0,
          0,
          6
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          0,
          6,
          0,
          6,
          6
        ],
        [
          0,
          0,
          6,
          6,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          0,
          0,
          6
        ],
        [
          0,
          6,
          0,
          0,
          0,
          6,
          0
        ]
      ],
      "output": [
        [
          5,
          8,
          5,
          5,
          5,
          5,
          8
        ],
        [
          5,
          5,
          5,
          8,
          5,
          5,
          5
        ],
        [
          5,
          8,
          5,
          8,
          5,
          8,
          5
        ],
        [
          5,
          5,
          8,
          5,
          5,
          5,
          5
        ],
        [
          8,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          8,
          5,
          8,
          5,
          5,
          5
        ],
        [
          5,
          8,
          5,
          5,
          5,
          8,
          5
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# boolean logical operations, bitmasks with separator, color mapping\n\n# description:\n# In the input, you will see three bitmasks separated by two vertical bars of different colors.\n# The left bitmask uses yellow, the middle one uses green, and the right one uses pink.\n# The separators are blue and orange vertical bars.\n# To make the output:\n# 1. Apply XOR operation between the left and middle bitmasks\n# 2. Apply AND operation between the result and the right bitmask\n# 3. In the final output, represent 'true' values with teal and 'false' values with gray\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the blue and orange vertical bars\n    x_bar1, x_bar2 = None, None\n    for x in range(input_grid.shape[0]):\n        if np.all(input_grid[x, :] == Color.BLUE):\n            x_bar1 = x\n        elif np.all(input_grid[x, :] == Color.ORANGE):\n            x_bar2 = x\n            break\n\n    left_mask = input_grid[:x_bar1, :]\n    middle_mask = input_grid[x_bar1+1:x_bar2, :]\n    right_mask = input_grid[x_bar2+1:, :]\n\n    # XOR operation between left and middle masks\n    xor_result = np.logical_xor(left_mask == Color.YELLOW, middle_mask == Color.GREEN)\n\n    # AND operation with right mask\n    final_result = np.logical_and(xor_result, right_mask == Color.PINK)\n\n    # Create output grid\n    output_grid = np.full_like(left_mask, Color.GRAY)\n    output_grid[final_result] = Color.TEAL\n    \n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    # Create three equally sized bitmasks\n    width, height = np.random.randint(3, 8), np.random.randint(3, 8)\n\n    grid1 = np.random.choice([Color.YELLOW, Color.BLACK], size=(width, height))\n    grid2 = np.random.choice([Color.GREEN, Color.BLACK], size=(width, height))\n    grid3 = np.random.choice([Color.PINK, Color.BLACK], size=(width, height))\n    \n    # Create blue and orange vertical bars\n    bar1 = np.full((1, height), Color.BLUE)\n    bar2 = np.full((1, height), Color.ORANGE)\n\n    # Combine all parts\n    grid = np.concatenate((grid1, bar1, grid2, bar2, grid3), axis=0)\n\n    return grid"
}