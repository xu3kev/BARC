{
  "uid": "b24921af03f2be4a",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          7,
          0,
          5,
          0,
          0,
          0,
          0,
          3,
          2,
          0,
          9,
          0,
          5
        ],
        [
          0,
          9,
          9,
          0,
          0,
          6,
          9,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          8,
          4,
          2,
          7,
          0,
          2,
          5,
          6,
          0,
          0,
          0,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          5,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          3,
          6,
          5,
          0,
          3,
          8,
          7,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          4,
          0,
          0,
          7,
          0,
          5,
          3,
          0,
          0,
          5,
          0,
          0,
          6
        ],
        [
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          7,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          6,
          0,
          0,
          0,
          3,
          2,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ],
        [
          0,
          0,
          0,
          1,
          9,
          4,
          0,
          0,
          0,
          8,
          9,
          8,
          7,
          0,
          2
        ],
        [
          0,
          0,
          6,
          0,
          0,
          3,
          2,
          0,
          0,
          2,
          0,
          0,
          0,
          2,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          0,
          9,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          9,
          0,
          9
        ],
        [
          9,
          9,
          9,
          0,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          9,
          9,
          9,
          9,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          9,
          0,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          9
        ],
        [
          0,
          0,
          9,
          0,
          0,
          9,
          0,
          9,
          9,
          0,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          0,
          9,
          0,
          0,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          9,
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          9,
          9,
          9,
          9,
          0,
          9
        ],
        [
          0,
          0,
          9,
          0,
          0,
          9,
          9,
          0,
          0,
          9,
          0,
          0,
          0,
          9,
          0
        ]
      ]
    },
    {
      "input": [
        [
          3,
          3,
          0,
          6,
          0,
          0,
          0,
          0,
          0,
          6,
          2,
          5
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          3,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          8
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0,
          6
        ],
        [
          0,
          2,
          2,
          7,
          2,
          0,
          0,
          0,
          0,
          5,
          6,
          0
        ],
        [
          3,
          0,
          0,
          0,
          0,
          0,
          2,
          5,
          1,
          5,
          0,
          0
        ],
        [
          9,
          1,
          0,
          5,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          2,
          9,
          8,
          4,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          9,
          3,
          0
        ],
        [
          6,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          7,
          4,
          0
        ],
        [
          0,
          5,
          7,
          0,
          5,
          4,
          2,
          0,
          0,
          9,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          5,
          0,
          9,
          0,
          0,
          6
        ],
        [
          0,
          0,
          3,
          0,
          8,
          0,
          8,
          0,
          1,
          0,
          0,
          3
        ],
        [
          0,
          6,
          0,
          3,
          0,
          5,
          3,
          0,
          2,
          0,
          5,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9
        ],
        [
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          9,
          9,
          9,
          0,
          0,
          0,
          9,
          9,
          9,
          9,
          0,
          0
        ],
        [
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          0,
          9,
          9,
          9,
          0,
          0,
          9,
          0,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          0,
          9,
          0,
          9,
          0,
          9,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          9,
          0,
          9,
          0,
          9,
          9,
          0,
          9,
          0,
          9,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          8,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          4,
          6,
          0
        ],
        [
          0,
          5,
          0,
          0,
          3,
          9,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          2
        ],
        [
          0,
          0,
          0,
          1,
          0,
          2,
          0,
          0,
          3,
          0,
          5,
          0,
          0,
          9,
          0
        ],
        [
          5,
          4,
          1,
          3,
          5,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0
        ],
        [
          0,
          0,
          5,
          6,
          0,
          5,
          3,
          0,
          0,
          0,
          0,
          0,
          3,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          8,
          1,
          0,
          3,
          5,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          9,
          6,
          0,
          0,
          2,
          0,
          0,
          0,
          9,
          0,
          1
        ],
        [
          0,
          7,
          3,
          9,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          6,
          1,
          5,
          0
        ],
        [
          0,
          1,
          3,
          5,
          0,
          9,
          9,
          4,
          0,
          8,
          0,
          7,
          0,
          6,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          7,
          0,
          7,
          0,
          0,
          0,
          0,
          9,
          0,
          5
        ],
        [
          6,
          0,
          0,
          0,
          0,
          1,
          3,
          0,
          0,
          4,
          0,
          1,
          0,
          8,
          0
        ],
        [
          2,
          0,
          7,
          5,
          0,
          5,
          8,
          0,
          0,
          0,
          5,
          0,
          0,
          8,
          5
        ],
        [
          1,
          8,
          8,
          0,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          3,
          1,
          1,
          0
        ],
        [
          0,
          0,
          8,
          0,
          3,
          0,
          5,
          7,
          0,
          2,
          0,
          0,
          2,
          3,
          0
        ],
        [
          5,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          3,
          0,
          1,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          9,
          9,
          0
        ],
        [
          0,
          9,
          0,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          9,
          0
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          9,
          9,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0,
          9,
          0,
          0,
          0,
          9,
          0,
          9
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          9,
          0,
          9,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          0,
          0,
          9,
          0,
          9
        ],
        [
          9,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          0,
          9,
          0,
          9,
          0,
          9,
          0
        ],
        [
          9,
          0,
          9,
          9,
          0,
          9,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          9,
          9,
          9,
          0
        ],
        [
          0,
          0,
          9,
          0,
          9,
          0,
          9,
          9,
          0,
          9,
          0,
          0,
          9,
          9,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          9,
          0,
          9,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          3,
          3,
          0,
          0,
          9,
          0,
          0,
          8,
          9
        ],
        [
          2,
          0,
          0,
          4,
          2,
          0,
          9,
          4,
          0
        ],
        [
          2,
          9,
          0,
          0,
          3,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          7,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          6,
          0,
          7,
          8,
          0
        ],
        [
          5,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          8
        ],
        [
          8,
          8,
          0,
          0,
          0,
          1,
          0,
          0,
          4
        ],
        [
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          7,
          0,
          0,
          0,
          7,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          0,
          9,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          0,
          9,
          9,
          0
        ],
        [
          9,
          9,
          9,
          0,
          9,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          0,
          9,
          0,
          9,
          9,
          0
        ],
        [
          9,
          0,
          9,
          0,
          0,
          0,
          9,
          0,
          9
        ],
        [
          9,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          9
        ],
        [
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          9,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# counting, rectangular cells, color guide\n\n# description:\n# In the input grid, you will see a grid divided into 3x3 rectangular cells. Each cell contains some colored pixels.\n# To make the output, identify the region with the maximum number of colored pixels and change the color of that region to maroon.\n# Then, replace all the other region colors (keeping the cells structure) with maroon except for any black backgrounds.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    cell_size = 3\n    \n    # Find the dimensions of the input grid\n    n, m = input_grid.shape\n    \n    # Identify rectangular regions\n    n_cells_x = n // cell_size\n    n_cells_y = m // cell_size\n    \n    max_colored_pixels = 0\n    max_cell = None\n    \n    # Calculate colored pixels in each cell\n    for i in range(n_cells_x):\n        for j in range(n_cells_y):\n            cell = input_grid[i * cell_size:(i + 1) * cell_size, j * cell_size:(j + 1) * cell_size]\n            colored_pixels_count = np.sum(cell != Color.BLACK)\n            if colored_pixels_count > max_colored_pixels:\n                max_colored_pixels = colored_pixels_count\n                max_cell = (i, j)\n    \n    # Make a copy of input grid\n    output_grid = np.copy(input_grid)\n    \n    # Change the max cell to maroon\n    if max_cell is not None:\n        x, y = max_cell\n        output_grid[x * cell_size:(x + 1) * cell_size, y * cell_size:(y + 1) * cell_size] = Color.MAROON\n    \n    # Replace all other colored pixels with maroon except black backgrounds\n    for i in range(n_cells_x):\n        for j in range(n_cells_y):\n            if (i, j) != max_cell:\n                cell = output_grid[i * cell_size:(i + 1) * cell_size, j * cell_size:(j + 1) * cell_size]\n                colored_pixels = cell != Color.BLACK\n                cell[colored_pixels] = Color.MAROON\n    \n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    cell_size = 3\n    n_cells_x = np.random.randint(3, 6)\n    n_cells_y = np.random.randint(3, 6)\n    \n    n = cell_size * n_cells_x\n    m = cell_size * n_cells_y\n    \n    grid = np.full((n, m), Color.BLACK)\n    \n    # Fill each cell with some random colored pixels\n    for i in range(n_cells_x):\n        for j in range(n_cells_y):\n            cell = grid[i * cell_size:(i + 1) * cell_size, j * cell_size:(j + 1) * cell_size]\n            num_colored_pixels = np.random.randint(1, cell_size * cell_size)\n            for _ in range(num_colored_pixels):\n                x, y = np.random.randint(0, cell_size, size=2)\n                cell[x, y] = random.choice(list(Color.NOT_BLACK))\n    \n    return grid"
}