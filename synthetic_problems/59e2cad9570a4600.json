{
  "uid": "59e2cad9570a4600",
  "annotations": {
    "example": "ok",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          7,
          5,
          8,
          9,
          9,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          1,
          1,
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          9,
          4,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          5,
          1,
          7,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          5,
          1,
          1,
          9,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          7,
          5,
          8,
          9,
          9,
          9,
          9,
          8,
          5,
          7
        ],
        [
          5,
          1,
          1,
          3,
          3,
          3,
          3,
          1,
          1,
          5
        ],
        [
          1,
          1,
          9,
          4,
          1,
          1,
          4,
          9,
          1,
          1
        ],
        [
          1,
          5,
          1,
          7,
          2,
          2,
          7,
          1,
          5,
          1
        ],
        [
          1,
          5,
          1,
          1,
          9,
          9,
          1,
          1,
          5,
          1
        ],
        [
          1,
          5,
          1,
          1,
          9,
          9,
          1,
          1,
          5,
          1
        ],
        [
          1,
          5,
          1,
          7,
          2,
          2,
          7,
          1,
          5,
          1
        ],
        [
          1,
          1,
          9,
          4,
          1,
          1,
          4,
          9,
          1,
          1
        ],
        [
          5,
          1,
          1,
          3,
          3,
          3,
          3,
          1,
          1,
          5
        ],
        [
          7,
          5,
          8,
          9,
          9,
          9,
          9,
          8,
          5,
          7
        ]
      ]
    },
    {
      "input": [
        [
          6,
          5,
          4,
          0,
          0,
          0
        ],
        [
          5,
          5,
          2,
          0,
          0,
          0
        ],
        [
          3,
          3,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          5,
          4,
          4,
          5,
          6
        ],
        [
          5,
          5,
          2,
          2,
          5,
          5
        ],
        [
          3,
          3,
          2,
          2,
          3,
          3
        ],
        [
          3,
          3,
          2,
          2,
          3,
          3
        ],
        [
          5,
          5,
          2,
          2,
          5,
          5
        ],
        [
          6,
          5,
          4,
          4,
          5,
          6
        ]
      ]
    },
    {
      "input": [
        [
          6,
          5,
          8,
          8,
          0,
          0,
          0,
          0
        ],
        [
          6,
          5,
          3,
          1,
          0,
          0,
          0,
          0
        ],
        [
          2,
          7,
          2,
          8,
          0,
          0,
          0,
          0
        ],
        [
          2,
          6,
          6,
          7,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          5,
          8,
          8,
          8,
          8,
          5,
          6
        ],
        [
          6,
          5,
          3,
          1,
          1,
          3,
          5,
          6
        ],
        [
          2,
          7,
          2,
          8,
          8,
          2,
          7,
          2
        ],
        [
          2,
          6,
          6,
          7,
          7,
          6,
          6,
          2
        ],
        [
          2,
          6,
          6,
          7,
          7,
          6,
          6,
          2
        ],
        [
          2,
          7,
          2,
          8,
          8,
          2,
          7,
          2
        ],
        [
          6,
          5,
          3,
          1,
          1,
          3,
          5,
          6
        ],
        [
          6,
          5,
          8,
          8,
          8,
          8,
          5,
          6
        ]
      ]
    },
    {
      "input": [
        [
          2,
          2,
          3,
          1,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          6,
          3,
          8,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          7,
          6,
          1,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          2,
          6,
          6,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          2,
          2,
          6,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          3,
          1,
          8,
          8,
          1,
          3,
          2,
          2
        ],
        [
          2,
          6,
          3,
          8,
          8,
          8,
          8,
          3,
          6,
          2
        ],
        [
          2,
          7,
          6,
          1,
          1,
          1,
          1,
          6,
          7,
          2
        ],
        [
          7,
          2,
          6,
          6,
          1,
          1,
          6,
          6,
          2,
          7
        ],
        [
          7,
          2,
          2,
          6,
          2,
          2,
          6,
          2,
          2,
          7
        ],
        [
          7,
          2,
          2,
          6,
          2,
          2,
          6,
          2,
          2,
          7
        ],
        [
          7,
          2,
          6,
          6,
          1,
          1,
          6,
          6,
          2,
          7
        ],
        [
          2,
          7,
          6,
          1,
          1,
          1,
          1,
          6,
          7,
          2
        ],
        [
          2,
          6,
          3,
          8,
          8,
          8,
          8,
          3,
          6,
          2
        ],
        [
          2,
          2,
          3,
          1,
          8,
          8,
          1,
          3,
          2,
          2
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# symmetry, reflection, patterns\n\n# description:\n# In the input you will see a colored pattern in the top-left quadrant of a grid.\n# To make the output, create the entire grid by mirroring the top-left quadrant horizontally, vertically, and diagonally.\n\ndef main(input_grid):\n    # Determine the size of the input grid and the quadrant\n    n, m = input_grid.shape\n    qn, qm = n // 2, m // 2  # assuming the input grid will always be of even dimensions\n\n    # Extract the top-left quadrant\n    top_left = input_grid[:qn, :qm]\n\n    # Reflect the top-left quadrant horizontally\n    top_right = np.fliplr(top_left)\n\n    # Reflect the top-left quadrant vertically\n    bottom_left = np.flipud(top_left)\n\n    # Reflect the top-right quadrant vertically\n    bottom_right = np.flipud(top_right)\n\n    # Combine the quadrants to form the complete grid\n    top_half = np.concatenate((top_left, top_right), axis=1)\n    bottom_half = np.concatenate((bottom_left, bottom_right), axis=1)\n    output_grid = np.concatenate((top_half, bottom_half), axis=0)\n\n    return output_grid\n\ndef generate_input():\n    # Create a randomly sized even-dimension grid, size from 6x6 to 10x10\n    n = m = random.choice([6, 8, 10])\n    grid = np.zeros((n, m), dtype=int)\n\n    # Define the size of the top-left quadrant\n    qn, qm = n // 2, m // 2\n\n    # Create a random pattern in the top-left quadrant\n    top_left_quadrant = random_sprite(qn, qm, density=1, symmetry=\"not_symmetric\", color_palette=Color.NOT_BLACK)\n\n    # Place this pattern on the grid\n    blit_sprite(grid, top_left_quadrant, x=0, y=0, background=Color.BLACK)\n\n    return grid"
}