{
  "uid": "b467781e8f30105f",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          1,
          1,
          9,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          1,
          0,
          9,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          8,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          9,
          9,
          8,
          8,
          8,
          8,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          9,
          0
        ],
        [
          4,
          4,
          0,
          7,
          7,
          1,
          1,
          9,
          0
        ],
        [
          0,
          8,
          0,
          7,
          7,
          1,
          0,
          9,
          0
        ],
        [
          0,
          8,
          0,
          7,
          7,
          0,
          7,
          9,
          0
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          9,
          0
        ],
        [
          0,
          8,
          0,
          7,
          3,
          0,
          7,
          0,
          7
        ],
        [
          9,
          9,
          9,
          9,
          8,
          8,
          8,
          8,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          1,
          5
        ],
        [
          0,
          0,
          2,
          2,
          2,
          4,
          1,
          5
        ]
      ],
      "output": [
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          0,
          7,
          9,
          9,
          9
        ],
        [
          0,
          7,
          7,
          7,
          7,
          4,
          0,
          5
        ],
        [
          0,
          7,
          7,
          7,
          7,
          4,
          1,
          5
        ],
        [
          0,
          7,
          2,
          2,
          2,
          4,
          1,
          5
        ]
      ]
    },
    {
      "input": [
        [
          1,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          3,
          5,
          0,
          0
        ],
        [
          0,
          7,
          7,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          3,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          1,
          0,
          7,
          3,
          0,
          7,
          7
        ],
        [
          1,
          0,
          7,
          3,
          0,
          7,
          7
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          3,
          5,
          0,
          7
        ],
        [
          0,
          7,
          7,
          3,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          3,
          0,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          2,
          8
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          1,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          2,
          8
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          8,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# color mapping, collision detection\n\n# description:\n# The input is a grid with several vertical and horizontal lines made of different colors.\n# To make the output, use collision detection to identify intersections of these lines and change the color of the intersections according to a color mapping.\n# Additionally, all pixels in the same row or column as an intersection will be changed to the intersection's new color.\n\ndef main(input_grid):\n    output_grid = input_grid.copy()\n    \n    # Initialize the color map for intersections\n    color_map = {\n        Color.RED: Color.GREEN,\n        Color.BLUE: Color.YELLOW,\n        Color.YELLOW: Color.BLUE,\n        Color.GREEN: Color.RED,\n        Color.PINK: Color.MAROON,\n        Color.MAROON: Color.PINK,\n        Color.GREY: Color.TEAL,\n        Color.TEAL: Color.GREY,\n        Color.ORANGE: Color.BLACK,\n        Color.BLACK: Color.ORANGE\n    }\n    \n    intersections = []\n    h_lines = []\n    v_lines = []\n    \n    # Identify all vertical and horizontal lines and intersections\n    for i in range(len(input_grid)):\n        for j in range(len(input_grid[i])):\n            if i > 0 and input_grid[i, j] == input_grid[i-1, j]:\n                vertical_line = (i, j)\n                v_lines.append(vertical_line)\n            if j > 0 and input_grid[i, j] == input_grid[i, j-1]:\n                horizontal_line = (i, j)\n                h_lines.append(horizontal_line)\n\n    # Get unique intersections\n    for v in v_lines:\n        for h in h_lines:\n            if v == h:\n                intersections.append(v)\n\n    # Apply color mapping at the intersections\n    for x, y in intersections:\n        new_color = color_map.get(input_grid[x, y], input_grid[x, y])\n        output_grid[x, y] = new_color\n        for i in range(output_grid.shape[0]):\n            if output_grid[i, y] not in color_map.values():\n                output_grid[i, y] = new_color\n        for j in range(output_grid.shape[1]):\n            if output_grid[x, j] not in color_map.values():\n                output_grid[x, j] = new_color\n\n    return output_grid\n\ndef generate_input():\n    n, m = random.randint(5, 10), random.randint(5, 10)\n    grid = np.full((n, m), Color.BLACK)\n    \n    # Create vertical and horizontal lines of random colors\n    for _ in range(random.randint(2, 4)):\n        color_v = random.choice(list(Color.ALL_COLORS))\n        color_h = random.choice(list(Color.ALL_COLORS))\n        x_v_start, x_v_end = random.randint(0, n-1), random.randint(0, n-1)\n        x_h_start, x_h_end = random.randint(0, m-1), random.randint(0, m-1)\n        y_v = random.randint(0, m-1)\n        y_h = random.randint(0, n-1)\n        \n        for i in range(min(x_v_start, x_v_end), max(x_v_start, x_v_end) + 1):\n            grid[i, y_v] = color_v\n        for j in range(min(x_h_start, x_h_end), max(x_h_start, x_h_end) + 1):\n            grid[y_h, j] = color_h\n    \n    return grid"
}