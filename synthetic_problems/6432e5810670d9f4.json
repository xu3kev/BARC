{
  "uid": "6432e5810670d9f4",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ]
      ],
      "output": [
        [
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0
        ],
        [
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          7,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          7,
          7,
          0,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ]
      ],
      "output": [
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ]
      ]
    },
    {
      "input": [
        [
          0,
          6,
          0,
          0,
          0,
          0,
          0,
          6
        ],
        [
          6,
          0,
          0,
          0,
          0,
          0,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          6,
          0
        ],
        [
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          6
        ]
      ],
      "output": [
        [
          6,
          0,
          0,
          0,
          0,
          0,
          6,
          0
        ],
        [
          0,
          6,
          0,
          0,
          0,
          0,
          0,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          6
        ],
        [
          0,
          6,
          0,
          0,
          0,
          0,
          6,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, positioning, copying, rotation\n\n# description:\n# In the input you will see four square patterns of pixels, one in each corner of the grid. All pixels in the patterns are the same color.\n# To make the output, copy each pattern to the corresponding corner of a new grid, but rotate each pattern 90 degrees clockwise.\n# The output grid should be the same size as the input grid.\n\ndef main(input_grid):\n    # Get the patterns from the input\n    objects = find_connected_components(input_grid, connectivity=8)\n\n    # Find the bounding box of each pattern\n    bounding_boxes = [bounding_box(obj) for obj in objects]\n\n    # Create the output grid with the same size as the input\n    n, m = input_grid.shape\n    output_grid = np.full((n, m), Color.BLACK)\n\n    # Copy and rotate the patterns to the output grid\n    for obj, (x, y, w, h) in zip(objects, bounding_boxes):\n        # Crop the pattern to remove any extra rows or columns of black pixels\n        sprite = crop(obj)\n        \n        # Rotate the sprite 90 degrees clockwise\n        rotated_sprite = np.rot90(sprite, k=-1)\n        \n        # Determine the new position for the rotated sprite\n        if x < n // 2 and y < m // 2:  # Top-left corner\n            new_x, new_y = 0, 0\n        elif x < n // 2 and y >= m // 2:  # Top-right corner\n            new_x, new_y = 0, m - rotated_sprite.shape[1]\n        elif x >= n // 2 and y < m // 2:  # Bottom-left corner\n            new_x, new_y = n - rotated_sprite.shape[0], 0\n        else:  # Bottom-right corner\n            new_x, new_y = n - rotated_sprite.shape[0], m - rotated_sprite.shape[1]\n        \n        # Copy the rotated pattern to the output grid\n        blit_sprite(output_grid, rotated_sprite, x=new_x, y=new_y, background=Color.BLACK)\n    \n    return output_grid\n\ndef generate_input():\n    # Make a random sized grid with black background\n    n = np.random.randint(8, 12)\n    m = np.random.randint(8, 12)\n    grid = np.zeros((n, m), dtype=int)\n\n    # Select a color for the patterns\n    color = np.random.choice(list(Color.NOT_BLACK))\n\n    # Select a size for the patterns\n    size = np.random.randint(2, min(n, m) // 2)\n\n    # Function to create a random pattern\n    def create_pattern(size):\n        return [[np.random.choice([color, Color.BLACK]) for _ in range(size)] for _ in range(size)]\n\n    # Make random patterns in each corner\n    grid[:size, :size] = create_pattern(size)  # Top-left\n    grid[:size, -size:] = create_pattern(size)  # Top-right\n    grid[-size:, :size] = create_pattern(size)  # Bottom-left\n    grid[-size:, -size:] = create_pattern(size)  # Bottom-right\n\n    # Check that at least one of the patterns is not all black\n    # If they are all black, try again\n    if np.all(grid == Color.BLACK):\n        return generate_input()\n\n    return grid"
}