{
  "uid": "0a2f30444b8e7026",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          6
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          7,
          7,
          7,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          7,
          7,
          7,
          0,
          0,
          0,
          5,
          5,
          0,
          0
        ],
        [
          7,
          0,
          7,
          0,
          0,
          5,
          5,
          5,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          5,
          5,
          5,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          3,
          3,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          3,
          3,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          4,
          4,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          0,
          0,
          4,
          4,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          5,
          0,
          5,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# symmetry, color mapping, sprites\n\n# description:\n# The input is a grid containing several objects (sprites). Each sprite has a unique color and one or more axes of symmetry (horizontal, vertical, diagonal, or radial). Each symmetrical sprite is assigned a color according to a predefined color mapping (green -> yellow, blue -> gray, red -> pink, teal -> maroon, yellow -> green, gray -> blue, pink -> red, maroon -> teal). The task is to identify each symmetrical sprite, apply the color mapping, and return the modified grid.\n\ncolor_map = {\n    Color.GREEN: Color.YELLOW,\n    Color.BLUE: Color.GRAY,\n    Color.RED: Color.PINK,\n    Color.TEAL: Color.MAROON,\n    Color.YELLOW: Color.GREEN,\n    Color.GRAY: Color.BLUE,\n    Color.PINK: Color.RED,\n    Color.MAROON: Color.TEAL             \n}\n\ndef main(input_grid):\n    # Create a copy of the input grid to work on\n    output_grid = input_grid.copy()\n    \n    # Identify all objects in the grid\n    objects = find_connected_components(input_grid, connectivity=8)\n\n    for obj in objects:\n        # Crop the object to isolate it as a sprite\n        sprite = crop(obj)\n        \n        # Determine if the object is symmetric\n        is_symmetric = is_sprite_symmetric(sprite)\n        \n        if is_symmetric:\n            # Get the main color of the sprite (exclude background)\n            unique_colors = np.unique(sprite)\n            main_color = unique_colors[unique_colors != Color.BLACK][0]\n            \n            # Apply color mapping\n            if main_color in color_map:\n                sprite[sprite == main_color] = color_map[main_color]\n                \n            # Get object's original position in the output grid\n            x, y, _, _ = bounding_box(obj)\n            \n            # Place the modified sprite back in the output grid\n            blit_sprite(output_grid, sprite, x, y, background=Color.BLACK)\n    \n    return output_grid\n\ndef is_sprite_symmetric(sprite):\n    # Check for different types of symmetry in the sprite\n    if np.array_equal(sprite, np.rot90(sprite, 1)):\n        return True\n    elif np.array_equal(sprite, np.fliplr(sprite)):\n        return True\n    elif np.array_equal(sprite, np.flipud(sprite)):\n        return True\n    elif np.array_equal(sprite, sprite.T) or np.array_equal(np.flipud(sprite), np.fliplr(sprite)):\n        return True\n    return False\n\ndef generate_input():\n    # Create a black background grid\n    grid_size = 10\n    grid = np.zeros((grid_size, grid_size), dtype=int)\n    \n    # Generate and place symmetric sprites\n    for _ in range(np.random.randint(3, 6)):\n        color = np.random.choice(list(Color.NOT_BLACK))\n        side_length = np.random.randint(2, 8)\n        symmetry = np.random.choice(['vertical', 'horizontal', 'diagonal', 'radial'])\n        sprite = random_sprite(side_length, side_length, symmetry=symmetry, color_palette=[color], connectivity=8)\n        \n        # Place sprite on the grid, ensuring no collisions\n        try:\n            x, y = random_free_location_for_sprite(grid, sprite, padding=1)\n            blit_sprite(grid, sprite, x, y)\n        except:\n            pass\n\n    return grid"
}